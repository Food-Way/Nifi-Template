name: CI/CD for Apache NiFi

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t nifi-foodway:latest .

      - name: Push Docker Image
        run: |
          echo "${{ secrets.FOODWAY_PASSWORD_DOCKERHUB }}" | docker login -u "${{ secrets.FOODWAY_USER_DOCKERHUB }}" --password-stdin
          docker tag nifi-foodway:latest "${{ secrets.FOODWAY_USER_DOCKERHUB }}"/nifi-foodway:latest
          docker push "${{ secrets.FOODWAY_USER_DOCKERHUB }}"/nifi-foodway:latest

      - name: Deploy NiFi on EC2 via Bastion Host
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.BASTION_HOST }}
          username: ${{ secrets.BASTION_USER }}
          key: ${{ secrets.BASTION_SSH_KEY }}
          script: |
            ssh -o StrictHostKeyChecking=no \
                -i /home/ubuntu/.ssh/ssh_key.pem \
                -t ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST_NIFI }} << 'EOF'
            # Check if the container is running and remove it if it is
            if [ "$(sudo docker ps -a -q -f name=nifi-foodway)" ]; then
                sudo docker rm -f nifi-foodway
            fi
            # Pull the latest image and run the container
            sudo docker pull "${{ secrets.FOODWAY_USER_DOCKERHUB }}/nifi-foodway:latest"
            sudo docker run -d -p 8080:8080 -p 8443:8443 --name nifi-foodway "${{ secrets.FOODWAY_USER_DOCKERHUB }}/nifi-foodway:latest"
            EOF

      - name: Check if NiFi instance is up
        run: |
          if curl -f -s http://${{ secrets.SERVER_HOST_NIFI }}:8080/nifi; then
            echo "NiFi is up"
          else
            echo "NiFi is down"
          fi

      - name: Create Parameter Context in NiFi
        run: |
          sudo ssh -o StrictHostKeyChecking=no \
              -i /home/ubuntu/.ssh/ssh_key.pem \
              -J ${BASTION_USER}@${BASTION_HOST} \
              -t ${SECRETS_SERVER_USER}@${SECRETS_SERVER_HOST_NIFI} << 'EOF'
          sudo curl --request POST \
          --url http://${SECRETS_SERVER_HOST_NIFI}:8443/nifi-api/parameter-contexts \
          --header 'Content-Type: application/json' \
          --data '{
            "revision": {
              "version": 0
            },
            "component": {
              "id": "b2a54d17-381e-4ba0-9529-3e6e2fc72165",
              "name": "prod2",
              "parameters": [
                {
                  "parameter": {
                    "name": "smtp.user",
                    "value": "foodway.staff@gmail.com",
                    "sensitive": false
                  },
                  "revision": {
                    "version": 0
                  }
                },
                {
                  "parameter": {
                    "name": "smtp.pass",
                    "value": "gher tyvq qxwj gxia",
                    "sensitive": true
                  },
                  "revision": {
                    "version": 0
                  }
                },
                {
                  "parameter": {
                    "name": "amqp.user",
                    "value": "foodway",
                    "sensitive": false
                  },
                  "revision": {
                    "version": 0
                  }
                },
                {
                  "parameter": {
                    "name": "amqp.pass",
                    "value": "GfFoodway",
                    "sensitive": true
                  },
                  "revision": {
                    "version": 0
                  }
                },
                {
                  "parameter": {
                    "name": "amqp.ip",
                    "value": "192.168.15.155",
                    "sensitive": false
                  },
                  "revision": {
                    "version": 0
                  }
                }
              ]
            }
          }'
          EOF
          
